# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Kramp.DotNet.Models.CDM

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'      
    - name: Execute GitVersion
      uses: gittools/actions/gitversion/execute@v0
      with:
        useConfigFile: true
        additionalArguments: '/updateprojectfiles'
    - name: Restore Dependencies
      run: dotnet restore
    - name: Build Solution
      run: dotnet build --no-restore
    - name: Test Solution
      run: dotnet test --no-build
    - name: Pack Nuget
      run: dotnet pack --no-build --configuration Debug --output .
    - name: Push Nuget
      run: dotnet nuget push *.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/M2MP/index.json --skip-duplicate
    - name: Upload Artifacts (net48)
      uses: actions/upload-artifact@v3
      with:
        name: Assemblies (net48)
        path: CDM/Models/bin/Debug/net48
    - name: Upload Artifacts (net7.0)
      uses: actions/upload-artifact@v3
      with:
        name: Assemblies (net7.0)
        path: CDM/Models/bin/Debug/net7.0
  
  deploy:
      needs: build
      runs-on: biztalk2020-dev-richard
      steps:
       - name: Download Artifact (net48)
         uses: actions/download-artifact@v3
         with:
           name: Assemblies (net48)
       - name: Deploy to Global Assembly Cache (GAC)
         shell: pwsh
         run: | 
           [System.Reflection.Assembly]::Load("System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")
           $publish = New-Object System.EnterpriseServices.Internal.Publish
           Get-Location
           Get-ChildItem *.dll | Foreach-Object { echo "Deploying to GAC: $_.FullName"; }
